// Package go_main is an autogenerated binder stub for package main.
//   gobind -lang=go bukanir
//
// File is generated by gobind. Do not edit.
package go_main

import (
	"bukanir"
	"golang.org/x/mobile/bind/seq"
)

func proxy_AutoComplete(out, in *seq.Buffer) {
	param_query := in.ReadUTF16()
	param_limit := in.ReadInt()
	res, err := main.AutoComplete(param_query, param_limit)
	out.WriteUTF16(res)
	if err == nil {
		out.WriteUTF16("")
	} else {
		out.WriteUTF16(err.Error())
	}
}

func proxy_Category(out, in *seq.Buffer) {
	param_category := in.ReadUTF16()
	param_limit := in.ReadInt()
	param_force := in.ReadInt()
	param_tmpDir := in.ReadUTF16()
	res, err := main.Category(param_category, param_limit, param_force, param_tmpDir)
	out.WriteUTF16(res)
	if err == nil {
		out.WriteUTF16("")
	} else {
		out.WriteUTF16(err.Error())
	}
}

func proxy_Search(out, in *seq.Buffer) {
	param_query := in.ReadUTF16()
	param_limit := in.ReadInt()
	res, err := main.Search(param_query, param_limit)
	out.WriteUTF16(res)
	if err == nil {
		out.WriteUTF16("")
	} else {
		out.WriteUTF16(err.Error())
	}
}

func proxy_Subtitle(out, in *seq.Buffer) {
	param_movie := in.ReadUTF16()
	param_year := in.ReadUTF16()
	param_release := in.ReadUTF16()
	param_language := in.ReadUTF16()
	param_category := in.ReadInt()
	param_season := in.ReadInt()
	param_episode := in.ReadInt()
	param_imdbID := in.ReadUTF16()
	res, err := main.Subtitle(param_movie, param_year, param_release, param_language, param_category, param_season, param_episode, param_imdbID)
	out.WriteUTF16(res)
	if err == nil {
		out.WriteUTF16("")
	} else {
		out.WriteUTF16(err.Error())
	}
}

func proxy_Summary(out, in *seq.Buffer) {
	param_id := in.ReadInt()
	param_category := in.ReadInt()
	param_season := in.ReadInt()
	res, err := main.Summary(param_id, param_category, param_season)
	out.WriteUTF16(res)
	if err == nil {
		out.WriteUTF16("")
	} else {
		out.WriteUTF16(err.Error())
	}
}

func init() {
	seq.Register("main", 1, proxy_AutoComplete)
	seq.Register("main", 2, proxy_Category)
	seq.Register("main", 3, proxy_Search)
	seq.Register("main", 4, proxy_Subtitle)
	seq.Register("main", 5, proxy_Summary)
}
